def id : (A : U) -> A -> A :=
λ A a -> a

def sigmaIntro : (A : U) -> (B : A -> U) ->
                 (x : A) -> B x -> (x : A) * B x :=
λ A B x u -> (x, u)

def sigmaProj₂ : (A : U) -> (B : A -> U) ->
                 (z : (x : A) * B x) -> B z.1 :=
λ A B z -> z.2

def const : (A : U) -> (B : U) -> A -> B -> A :=
λ A B a b -> a

def test : (A : U) -> (B : U) -> (A -> B) -> A -> B :=
λ A B f x -> f x